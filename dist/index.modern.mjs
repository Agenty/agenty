import t from"axios";class s{constructor(t){this.api=void 0,this.api=t}async get(t){return this.api.get(`/agents/${t}`)}async list(){return this.api.get("/agents")}async create(t){return this.api.post("/agents",t)}async update(t,s){return this.api.put(`/agents/${t}`,s)}async delete(t){return this.api.delete(`/agents/${t}`)}}class e{constructor(t){this.api=void 0,this.api=t}async get(t){return this.api.get(`/agents/${t}`)}async list(){return this.api.get("/agents")}async create(t){return this.api.post("/agents",t)}async update(t,s){return this.api.put(`/agents/${t}`,s)}async delete(t){return this.api.delete(`/agents/${t}`)}}class i{constructor(t){this.api=void 0,this.api=t}async get(t){return this.api.get(`/agents/${t}`)}async list(){return this.api.get("/agents")}async create(t){return this.api.post("/agents",t)}async update(t,s){return this.api.put(`/agents/${t}`,s)}async delete(t){return this.api.delete(`/agents/${t}`)}}class a{constructor(t){this.api=void 0,this.api=t}async get(t){return this.api.get(`/jobs/${t}`)}async list(t=void 0){return this.api.get("/jobs",t)}async start(t){return this.api.post("/jobs/start",{agent_id:t})}async stop(t){return this.api.get(`/jobs/${t}/stop`)}async result(t){return this.api.get(`/jobs/${t}/result`)}}class r{constructor(t){this.api=void 0,this.api=t}async list(t=void 0){return this.api.get("/lists",t)}async get(t){return this.api.get(`/lists/${t}`)}async create(t){return this.api.post("/lists",t)}async update(t,s){return this.api.put(`/lists/${t}`,s)}async delete(t){return this.api.delete(`/lists/${t}`)}}class n{constructor(t){this.api=void 0,this.api=t}async list(t){return this.api.get(`/lists/${t}/rows`)}async get(t,s){return this.api.get(`/lists/${t}/rows/${s}`)}async create(t,s){return this.api.post(`/lists/${t}/rows`,s)}async update(t,s,e){return this.api.put(`/lists/${t}/rows/${s}`,e)}async delete(t,s){return this.api.delete(`/lists/${t}/rows/${s}`)}async clear(t){return this.api.delete(`/lists/${t}/rows/clear`)}}class p{constructor(t){this.api=void 0,this.api=t}async get(t){return this.api.get(`/projects/${t}`)}async list(t=void 0){return this.api.get("/projects",t)}async create(t){return this.api.post("/projects",t)}async update(t,s){return this.api.put(`/projects/${t}`,s)}async delete(t){return this.api.delete(`/projects?id=${t}`)}}class c{constructor(t){this.api=void 0,this.api=t}async create(t,s){return this.api.post(`/projects/${t}/add`,s)}async delete(t,s){return this.api.delete(`/projects/${t}/remove?agent_id=${s}`)}}class h{constructor(t){this.api=void 0,this.api=t}async get(t){return this.api.get(`/scheduler/${t}`)}async create(t,s){return this.api.post(`/scheduler/${t}`,s)}async isEnabled(t,s){return this.api.patch(`/scheduler/${t}`,s)}async delete(t){return this.api.delete(`/scheduler/${t}`)}}class o{constructor(t){this.api=void 0,this.api=t}async get(t){return this.api.get(`/users/${t}`)}async list(){return this.api.get("/users")}async create(t){return this.api.post("/users",t)}async update(t,s){return this.api.put(`/users/${t}`,s)}async delete(t){return this.api.delete(`/users?user_id=${t}`)}}class u{constructor(t){this.api=void 0,this.api=t}async get(t){return this.api.get(`/workflows/${t}`)}async list(){return this.api.get("/workflows")}async create(t){return this.api.post("/workflows",t)}async update(t,s){return this.api.put(`/workflows/${t}`,s)}async delete(t){return this.api.delete(`/workflows/${t}`)}async isEnabled(t,s){return this.api.patch(`/workflows/${t}`,s)}}function l(){return l=Object.assign?Object.assign.bind():function(t){for(var s=1;s<arguments.length;s++){var e=arguments[s];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])}return t},l.apply(this,arguments)}class d{constructor(t){if(this.baseUrl="https://api.agenty.com/v2",this.browserUrl="https://browser.agenty.com/api",this.apiKey=void 0,!t)throw new Error("API key is required. Get your api key from here - https://cloud.agenty.com/settings/apikeys");this.apiKey=t}async get(s,e){return(await t.get(`${this.baseUrl}${s}`,{params:l({apiKey:this.apiKey},e)})).data}async post(s,e,i){return(await t.post(`${this.baseUrl}${s}`,e,{params:l({apiKey:this.apiKey},i)})).data}async put(s,e,i){return(await t.put(`${this.baseUrl}${s}`,e,{params:l({apiKey:this.apiKey},i)})).data}async patch(s,e,i){return(await t.patch(`${this.baseUrl}${s}`,e,{params:l({apiKey:this.apiKey},i)})).data}async delete(s,e){return(await t.delete(`${this.baseUrl}${s}`,{params:l({apiKey:this.apiKey},e)})).data}async browser(s,e,i){return(await t.post(`${this.browserUrl}${s}`,e,{params:l({apiKey:this.apiKey},i)})).data}}class y{constructor(t){this.api=void 0,this.api=t}async screenshot(t,s=void 0){return this.api.browser("/screenshot",l({url:t},s))}async pdf(t,s=void 0){return this.api.browser("/pdf",l({url:t},s))}async content(t,s=void 0){return this.api.browser("/content",l({url:t},s))}async extract(t,s=void 0){return this.api.browser("/extract",l({url:t},s))}async scrape(t,s=void 0){return this.api.browser("/scrape",l({url:t},s))}}class g{constructor(t){this.api=void 0,this.jobs=void 0,this.lists=void 0,this.listRows=void 0,this.users=void 0,this.workflows=void 0,this.schedulers=void 0,this.scrapingAgents=void 0,this.crawlingAgents=void 0,this.changeDetectionAgents=void 0,this.projects=void 0,this.projectAgents=void 0,this.browser=void 0,this.api=new d(t),this.jobs=new a(this.api),this.lists=new r(this.api),this.listRows=new n(this.api),this.users=new o(this.api),this.workflows=new u(this.api),this.schedulers=new h(this.api),this.scrapingAgents=new s(this.api),this.crawlingAgents=new e(this.api),this.changeDetectionAgents=new i(this.api),this.projects=new p(this.api),this.projectAgents=new c(this.api),this.browser=new y(this.api)}}export{g as default};
